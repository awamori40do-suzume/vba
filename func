def generate_numbers(start: int, end: int, step: int = 1, zero_pad: int = 0) -> list:
    """
    指定された範囲の整数を生成する関数。

    Parameters:
        start (int): 開始値（含む）
        end (int): 終了値（含む）
        step (int): 増分（デフォルトは1）
        zero_pad (int): 桁数（ゼロ埋めしたい場合）

    Returns:
        list[str or int]: ゼロ埋めされた文字列または整数のリスト
    """
    numbers = []
    for i in range(start, end + 1, step):
        if zero_pad > 0:
            numbers.append(str(i).zfill(zero_pad))
        else:
            numbers.append(i)
    return numbers


import random

base = 10000

# ランダムな平均パケットサイズ（バイト）を仮定（例：64〜1500バイト）
packet_size_bytes = random.randint(64, 1500)

# パケットサイズをビットに換算
packet_size_bits = packet_size_bytes * 8

# base値を bps とするか pps とするか決める
# ここでは base を pps として使う例
pps = base
bps = pps * packet_size_bits

print(f"パケットサイズ: {packet_size_bytes} bytes")
print(f"pps: {pps}")
print(f"bps: {bps}")


mylist = [1.333, 1.5, 1.0]
times = 10  # 実行回数

for i in range(times):
    item = mylist[i % len(mylist)]  # ループする
    formatted = f"{item:.10f}"      # 小数点以下10桁でフォーマット
    print(f"{i+1}回目: {formatted}")
